<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
script_execute(scr_after_timer);
/*
global.timer = global.timer-1;


if(global.timer == 0)
{

    if(global.add_correct_answers&gt;5){
        global.timer=10;
        room_goto(rm_pennies);
    }else{
        global.timer=20;
        room_goto(rm_subtraction);
    }
}

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
script_execute(scr_flying_answers);

/*
randomize();
ra=irandom(50);

var n;
randomize();
n[0]=irandom(9);
randomize();
n[1]=irandom(9);
randomize();
n[2]=irandom(9);
randomize();
n[3]=irandom(9);
randomize();
n[4]=global.res;
//generate flying answers
no=instance_create(irandom_range(sprite_get_width(sp_num)+300,room_width-sprite_get_width(sp_num)),350,one);
no.image_speed=0;
no.sprite_index=sp_num;
randomize();
no.image_index=n[irandom(4)];
no.direction=1;
randomize();
no.vspeed=no.vspeed-irandom_range(2,2); //speed


with(no) {
    var tries, done;
    tries = 0;
    done = false;
    do {
        tries += 1;
        x = irandom_range(sprite_get_width(sp_num)+300,room_width-sprite_get_width(sp_num));
        done = !place_meeting(x,y,object_index);
    } until(done or tries&gt;50);
    if(not done) {
        // not enough space (or bad luck), bail out
        instance_destroy();
    }
}

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
script_execute(scr_room_start);

/*
global.new1=irandom(2);
global.new2=irandom(2);

global.good=false;
global.correct_answers=0;
global.incorrect_answers=0;


global.add_correct_answers=0;
global.sub_correct_answers=0;
global.multi_correct_answers=0;
global.div_correct_answers=0;

global.timer=20;
global.score=0;
global.pennies=0;
global.room=rm_addition;
global.res=global.new1+global.new2;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>back=instance_create((sprite_get_width(spt_star_2)/2)*2,room_height-50,obj_back);
with(back){image_yscale=0.5;image_xscale=0.5;}

draw_set_valign(fa_top);
draw_set_halign(fa_center);

//draw_sprite(spt_frame,0,(room_width/2),580);

//draw frame around expression
//draw_line_width_color(390,500,890,500,10,c_orange,c_orange); //-make_colour_rgb(193,39,45)
//draw_line_width_color(390,room_height-55,890,room_height-55,10,c_orange,c_orange);//-

draw_line_width_color(room_width/2,room_height-200,room_width/2,room_height-50,500,c_orange,c_orange);//|
//draw_line_width_color(390,room_height-245,390,room_height-50,10,c_orange,c_orange);//|
//draw_line_width_color(890,room_height-245,890,room_height-50,10,c_orange,c_orange);  // |

//draw_sprite(spt_sparator,0,(room_width/2),400);

//levels board
ylevrlboard=20;
draw_sprite_stretched(spt_fade_3,0,10,10,300,190);
draw_set_halign(fa_center); 
draw_set_color(c_red);
draw_text(155, ylevrlboard,    "Levels");

draw_set_halign(fa_left);  
draw_set_color(c_teal)  
draw_text(25, ylevrlboard+25, "Level 1: Addition");
draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
draw_text(25, ylevrlboard+100,"Level 4: Division");
draw_text(25, ylevrlboard+125,"Level 5: Combination");
draw_text(25, ylevrlboard+150,"Level 6: Bouns");

//result board
draw_sprite_stretched(spt_fade_3,0,10,205,300,200);



if(global.pennies&gt;0){
    draw_sprite_stretched(spt_fade_4,0,10,(room_height/2)+60,300,100);

    draw_set_halign(fa_center);
    draw_text(160,(room_height/2)+70,"Buy more time.#"+string(global.pennies)+ " seconds for "+string(global.pennies)+" coins");
    global.buy=instance_create(160,(room_height/2)+110,obj_buy);
   // global.buy.image_xscale=0.4;
    //global.buy.image_yscale=0.4;
}else if(global.pennies==0 &amp;&amp; instance_exists(obj_buy)){

 with(global.buy){instance_destroy();}
}


px1=390;
px2=890;
py=510;

l=px2-px1; //452/30=15.067


pv=px2/(R_TIMER+global.timer2); //27

//draw the timer bar
draw_healthbar(px1, py, px2, py+20, (global.timer/(R_TIMER+global.timer2))*100, c_gray,c_orange, c_orange, 0, true, true);


draw_set_color(c_black)
draw_set_font(font1)
draw_set_halign(fa_center);    
draw_text((room_width/2), py, "Timer: "+string(global.timer));


textx=25;//155;

expression_y=560;

if(room==rm_addition){

    draw_set_halign(fa_left);  
    draw_set_color(c_red);
    draw_text(25, ylevrlboard+25, "Level 1: Addition");
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
    draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
    draw_text(25, ylevrlboard+100,"Level 4: Division");
    draw_text(25, ylevrlboard+125,"Level 5: Combination");
    draw_text(25, ylevrlboard+150,"Level 6: Bouns");



    draw_set_color(c_teal)
    draw_set_font(font0)
    draw_set_halign(fa_center);
    draw_text((room_width/2), expression_y, string(global.new1)+" + "+string(global.new2)+" = ?");
    
    
    draw_set_halign(fa_left);
    draw_set_color(c_red)
    draw_set_font(font1)
    //draw_text(15, 10, "Timerr: "+string(global.timerr));
    
    
    draw_set_color(c_teal)
    draw_set_font(font1)
   // 15
    draw_text(textx, 230, "Addition correct answers: "+string(global.add_correct_answers));
    
    draw_set_color(c_red)
    draw_set_font(font1)
    draw_text(textx, 250, "Incorrect answers: "+string(global.incorrect_answers));
}

if(room==rm_subtraction){
    


    draw_set_halign(fa_left);
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+25, "Level 1: Addition");
    draw_set_color(c_red);
    draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
    draw_text(25, ylevrlboard+100,"Level 4: Division");
    draw_text(25, ylevrlboard+125,"Level 5: Combination");
    draw_text(25, ylevrlboard+150,"Level 6: Bouns");


    

    draw_set_color(c_teal)
    draw_set_font(font0)
    draw_set_halign(fa_center);
    draw_text((room_width/2), expression_y, string(global.new1)+" - "+string(global.new2)+" = ?");
    
    draw_set_halign(fa_left);
    draw_set_color(c_red)
    draw_set_font(font1)
    //draw_text(15, 10, "Timer: "+string(global.timer));
    draw_text(textx, 210, "Coins: "+string(global.pennies));
        
    draw_set_color(c_teal)
    draw_set_font(font1)
    
    draw_text(textx, 230, "Addiction correct answers:       "+string(global.add_correct_answers));
    draw_text(textx, 250, "Subtraction correct answers:    "+string(global.sub_correct_answers));
  
    draw_set_color(c_red)
    draw_set_font(font1)
    draw_text(textx, 360, "Incorrect answers: "+string(global.incorrect_answers));
}

if(room==rm_multiplication){
    




    draw_set_halign(fa_left);
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+25, "Level 1: Addition"); 
    draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
    draw_set_color(c_red);
    draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+100,"Level 4: Division");
    draw_text(25, ylevrlboard+125,"Level 5: Combination");
    draw_text(25, ylevrlboard+150,"Level 6: Bouns");


    draw_set_color(c_teal)
    draw_set_font(font0)
    draw_set_halign(fa_center);
    draw_text((room_width/2), expression_y, string(global.new1)+" * "+string(global.new2)+" = ?");
    
    draw_set_halign(fa_left);
    draw_set_color(c_red)
    draw_set_font(font1)
    //draw_text(15, 10, "Timer: "+string(global.timer));
    draw_text(textx, 210, "Coins: "+string(global.pennies));
        
    draw_set_color(c_teal)
    draw_set_font(font1)
    
    draw_text(textx, 230, "Addiction correct answers:       "+string(global.add_correct_answers));
    draw_text(textx, 250, "Subtraction correct answers:    "+string(global.sub_correct_answers));
    draw_text(textx, 270, "Multiplication correct answers: "+string(global.multi_correct_answers));
        
    draw_set_color(c_red)
    draw_set_font(font1)
    draw_text(textx, 360, "Incorrect answers: "+string(global.incorrect_answers));
}

if(room==rm_division){
    

    draw_set_halign(fa_left);
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+25, "Level 1: Addition"); 
    draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
    draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
    draw_set_color(c_red);
    draw_text(25, ylevrlboard+100,"Level 4: Division");
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+125,"Level 5: Combination");
    draw_text(25, ylevrlboard+150,"Level 6: Bouns");
    
    
    
    
    
    
    draw_set_color(c_teal)
    draw_set_font(font0)
    draw_set_halign(fa_center);
    draw_text((room_width/2), expression_y, string(global.new1)+" / "+string(global.new2)+" = ?");
    
    draw_set_halign(fa_left);
    draw_set_color(c_red)
    draw_set_font(font1)
    //draw_text(15, 10, "Timer: "+string(global.timer));
    draw_text(textx, 210, "Coins: "+string(global.pennies));
        
    draw_set_color(c_teal)
    draw_set_font(font1)
    
    draw_text(textx, 230, "Addiction correct answers:       "+string(global.add_correct_answers));
    draw_text(textx, 250, "Subtraction correct answers:    "+string(global.sub_correct_answers));
    draw_text(textx, 270, "Multiplication correct answers: "+string(global.multi_correct_answers));
    draw_text(textx, 290, "Division correct answers:        "+string(global.div_correct_answers));
         
    draw_set_color(c_red)
    draw_set_font(font1)
    draw_text(textx, 360, "Incorrect answers: "+string(global.incorrect_answers));
}




if(room==rm_combination){
    
    draw_set_halign(fa_left);
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+25, "Level 1: Addition"); 
    draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
    draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
    draw_text(25, ylevrlboard+100,"Level 4: Division");
    draw_set_color(c_red);
    draw_text(25, ylevrlboard+125,"Level 5: Combination");    
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+150,"Level 6: Bouns");
    
    
    
    draw_set_color(c_teal)
    draw_set_font(fot_com)
    draw_set_halign(fa_center);
    draw_text((room_width/2), expression_y, string(global.expression));
    
    draw_set_halign(fa_left);
    draw_set_color(c_red)
    draw_set_font(font1)
    //draw_text(15, 10, "Timer: "+string(global.timer));
    draw_text(textx, 210, "Coins: "+string(global.pennies));
        
    draw_set_color(c_teal)
    draw_set_font(font1)
    
    draw_text(textx, 230, "Addiction correct answers:       "+string(global.add_correct_answers));
    draw_text(textx, 250, "Subtraction correct answers:    "+string(global.sub_correct_answers));
    draw_text(textx, 270, "Multiplication correct answers: "+string(global.multi_correct_answers));
    draw_text(textx, 290, "Division correct answers:        "+string(global.div_correct_answers));
    draw_text(textx, 310, "Combination correct answers:  "+string(global.com_correct_answers));
        
    draw_set_color(c_red)
    draw_set_font(font1)
    draw_text(textx, 360, "Incorrect answers: "+string(global.incorrect_answers));
}

/*
global.sub_correct_answers=0;
global.multi_correct_answers=0;
global.div_correct_answers=0;
global.com_correct_answers=0;
global.bon_correct_answers=0;
global.expression="9+9";
global.pennies=9;
*/

if(room==rm_bonus){


    draw_set_halign(fa_left);
    draw_set_color(c_teal);
    draw_text(25, ylevrlboard+25, "Level 1: Addition"); 
    draw_text(25, ylevrlboard+50, "Level 2: Subtraction");
    draw_text(25, ylevrlboard+75, "Level 3: Multiplication");
    draw_text(25, ylevrlboard+100,"Level 4: Division");
    draw_text(25, ylevrlboard+125,"Level 5: Combination");    
    draw_set_color(c_red);
    draw_text(25, ylevrlboard+150,"Level 6: Bouns");
    
    
    
    draw_set_color(c_teal)
    draw_set_font(fot_com)
    draw_set_halign(fa_center);
    draw_text((room_width/2), expression_y, string(global.expression));
    
    
    draw_set_halign(fa_left);
    draw_set_color(c_red)
    draw_set_font(font1)
    //draw_text(15, 10, "Timer: "+string(global.timer));
    draw_text(textx, 210, "Coins: "+string(global.pennies));
        
    draw_set_color(c_teal)
    draw_set_font(font1)
    
    draw_text(textx, 230, "Addiction correct answers:       "+string(global.add_correct_answers));
    draw_text(textx, 250, "Subtraction correct answers:    "+string(global.sub_correct_answers));
    draw_text(textx, 270, "Multiplication correct answers: "+string(global.multi_correct_answers));
    draw_text(textx, 290, "Division correct answers:        "+string(global.div_correct_answers));
    draw_text(textx, 310, "Combination correct answers:  "+string(global.com_correct_answers));
    draw_text(textx, 330, "Negatives correct answers:      "+string(global.bon_correct_answers));
        
    draw_set_color(c_red)
    draw_set_font(font1)
    draw_text(textx, 360, "Incorrect answers: "+string(global.incorrect_answers));
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
