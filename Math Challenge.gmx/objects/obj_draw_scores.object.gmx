<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>            ini_open("addition_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_addition[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_addition[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
            
            
            
            ini_open("subtraction_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_subtraction[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_subtraction[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
            
            ini_open("multiplication_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_multiplication[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_multiplication[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
            
            ini_open("division_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_division[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_division[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
          
            ini_open("combination_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_combination[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_combination[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();            
          
            
            
            ini_open("incorrect_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_incorrect[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_incorrect[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();          
            
            
            ini_open("bonus_scores.ini")
            for (i = 0; i&lt;10; i++)
            {
                //fill the global scores array with values from the ini file. If no values are present, then fill with name = unknown and score = 0
                global.score_array_bonus[i, 0] = ini_read_string(string(i), "Name", "unknown");
                global.score_array_bonus[i, 1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
            
             /* */

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Horizintal lines
sly=100;
for(k=0;k&lt;12;k++){
    draw_line_width_colour(0,sly,room_width,sly,4,c_green,c_green);
    sly=sly+50;
}


//vertical lines
slx=0;
for(k=0;k&lt;7;k++){
    draw_line_width_colour(slx,100,slx,room_height-90,4,c_green,c_green);
    slx=slx+180;
}





xx = 10;
yy = 125;

draw_set_font(fon_score_w_title);
draw_set_colour(c_green);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(room_width/2, 50, "High Scores");

draw_set_colour(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_center);

draw_set_font(fon_scores_title);



draw_text(xx, yy, "Addition");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_addition[i, 0]) != "unknown" &amp;&amp; string(global.score_array_addition[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_addition[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_addition[i, 1]));
    }
}



xx = 190;
yy = 125;

draw_set_font(fon_scores_title);
draw_text(xx, yy, "Subtraction");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_subtraction[i, 0]) != "unknown" &amp;&amp; string(global.score_array_subtraction[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_subtraction[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_subtraction[i, 1]));
    }
}


xx = 370;
yy = 125;

draw_set_font(fon_scores_title);
draw_text(xx, yy, "Multiplication");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_multiplication[i, 0]) != "unknown" &amp;&amp; string(global.score_array_multiplication[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_multiplication[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_multiplication[i, 1]));
    }
}


xx = 550;
yy = 125;

draw_set_font(fon_scores_title);
draw_text(xx, yy, "Division");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_division[i, 0]) != "unknown" &amp;&amp; string(global.score_array_division[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_division[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_division[i, 1]));
    }
}



xx = 730;
yy = 125;

draw_set_font(fon_scores_title);
draw_text(xx, yy, "Combination");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_combination[i, 0]) != "unknown" &amp;&amp; string(global.score_array_combination[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_combination[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_combination[i, 1]));
    }
}

xx = 910;
yy = 125;

draw_set_font(fon_scores_title);
draw_text(xx, yy, "Negatives");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_bonus[i, 0]) != "unknown" &amp;&amp; string(global.score_array_bonus[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_bonus[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_bonus[i, 1]));
    }
}


xx = 1090;
yy = 125;

draw_set_font(fon_scores_title);
draw_text(xx, yy, "Incorrect answers");
draw_set_font(fon_scores);
for (i = 0; i&lt;10; i++)
{
    yy += 50;
    if(string(global.score_array_incorrect[i, 0]) != "unknown" &amp;&amp; string(global.score_array_incorrect[i, 1]) != "0"){
        draw_text(xx, yy, string(global.score_array_incorrect[i, 0]))
        draw_text(xx + 130, yy, string(global.score_array_incorrect[i, 1]));
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
